//상속
//class 자식 extends 부모
//		   A 	    is 	   B
//객체지향언어들은 중복을 최대한 제거함 그러므로 상속사용

public class 상속 {
	public static void main(String[] args) {
		사람 a사람 = new 사람();
		a사람.숨쉬다();
		
		강아지 a강아지 = new 강아지();
		a강아지.숨쉬다();
	}
}

//동물 => 부모 클래스
//사람, 강아지 => 자식 클래스
//사람 extends 동물 => 사람이 동물의 능력을 물려 받는다.
//"`사람`은 `동물`이다." 라고 자바에게 알려준다.
//`A 는 B 이다.` 테스트에 통과하는 것만 상속이 가능하다.
//*자바는 다중 상속이 불가능 하므로 A is B에 어긋날 수 도있지만
//중복을 줄이기 위해서는 부적합한 상속을 써야할 때도 있음*
//클래스와 객체는 명사이다.
//메서드는 동사이다.

class 동물{
	void 숨쉬다() {
		System.out.println("숨쉬다.");
	}
}
class 사람 extends 동물{
	void 숨쉬다() {
		System.out.println("숨쉽니다.");
	//부모 클래스에서 정의한 숨쉬다 메서드를 자식 클래스에서 바꾸는 행위를 메서드 재정의 라고 한다.
	//두 개의 숨쉬다 메서드는 중복이 아님, 쓰이는 내용이 다르기 때문
	//메서드 재정의 => 부모가 물려준 능력을 다시 구현한다.
	//다른 말로 메서드 오버라이드 라고도 한다. 다형성에 해당함
		
	}
}
class 강아지 extends 동물{
	
}